1624239638
waR3U4bTeM%3A828e0013b8f3bc1bb22b4f57172b019d-fce5df6a90ff78c9a92878eb797070e6
s:5932:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxMjp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MjI6IlRoZSBtYWluIHRlbXBsYXRlIGZpbGUiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6Mjc0OiJUaGlzIGlzIHRoZSBtb3N0IGdlbmVyaWMgdGVtcGxhdGUgZmlsZSBpbiBhIFdvcmRQcmVzcyB0aGVtZQphbmQgb25lIG9mIHRoZSB0d28gcmVxdWlyZWQgZmlsZXMgZm9yIGEgdGhlbWUgKHRoZSBvdGhlciBiZWluZyBzdHlsZS5jc3MpLgpJdCBpcyB1c2VkIHRvIGRpc3BsYXkgYSBwYWdlIHdoZW4gbm90aGluZyBtb3JlIHNwZWNpZmljIG1hdGNoZXMgYSBxdWVyeS4KRS5nLiwgaXQgcHV0cyB0b2dldGhlciB0aGUgaG9tZSBwYWdlIHdoZW4gbm8gaG9tZS5waHAgZmlsZSBleGlzdHMuIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6Mjp7aTowO086NDM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXExpbmsiOjM6e3M6NzoiACoAbmFtZSI7czo0OiJsaW5rIjtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcTGluawBsaW5rIjtzOjY1OiJodHRwczovL2RldmVsb3Blci53b3JkcHJlc3Mub3JnL3RoZW1lcy9iYXNpY3MvdGVtcGxhdGUtaGllcmFyY2h5LyI7czoxNDoiACoAZGVzY3JpcHRpb24iO047fWk6MTtPOjQ2OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xHZW5lcmljIjoyOntzOjc6IgAqAG5hbWUiO3M6NzoicGFja2FnZSI7czoxNDoiACoAZGVzY3JpcHRpb24iO086NDU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbiI6Mjp7czo1OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgBib2R5VGVtcGxhdGUiO3M6MTI6InJpdmVuZGVsbHdlYiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaGFzaCI7czozMjoiZmNlNWRmNmE5MGZmNzhjOWE5Mjg3OGViNzk3MDcwZTYiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZSI7czo5OiJpbmRleC5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo5OiJpbmRleC5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjE4NDY6Ijw/cGhwCi8qKgogKiBUaGUgbWFpbiB0ZW1wbGF0ZSBmaWxlCiAqCiAqIFRoaXMgaXMgdGhlIG1vc3QgZ2VuZXJpYyB0ZW1wbGF0ZSBmaWxlIGluIGEgV29yZFByZXNzIHRoZW1lCiAqIGFuZCBvbmUgb2YgdGhlIHR3byByZXF1aXJlZCBmaWxlcyBmb3IgYSB0aGVtZSAodGhlIG90aGVyIGJlaW5nIHN0eWxlLmNzcykuCiAqIEl0IGlzIHVzZWQgdG8gZGlzcGxheSBhIHBhZ2Ugd2hlbiBub3RoaW5nIG1vcmUgc3BlY2lmaWMgbWF0Y2hlcyBhIHF1ZXJ5LgogKiBFLmcuLCBpdCBwdXRzIHRvZ2V0aGVyIHRoZSBob21lIHBhZ2Ugd2hlbiBubyBob21lLnBocCBmaWxlIGV4aXN0cy4KICoKICogQGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIud29yZHByZXNzLm9yZy90aGVtZXMvYmFzaWNzL3RlbXBsYXRlLWhpZXJhcmNoeS8KICoKICogQHBhY2thZ2Ugcml2ZW5kZWxsd2ViCiAqLwoKZ2V0X2hlYWRlcigpOwo/PgoKCTxkaXYgaWQ9InByaW1hcnkiIGNsYXNzPSJjb250ZW50LWFyZWEiPgoJCTxtYWluIGlkPSJtYWluIiBjbGFzcz0ic2l0ZS1tYWluIj4KCgkJPD9waHAKCQlpZiAoIGhhdmVfcG9zdHMoKSApIDoKCgkJCWlmICggaXNfaG9tZSgpICYmICEgaXNfZnJvbnRfcGFnZSgpICkgOgoJCQkJPz4KCQkJCTxoZWFkZXI+CgkJCQkJPGgxIGNsYXNzPSJwYWdlLXRpdGxlIHNjcmVlbi1yZWFkZXItdGV4dCI+PD9waHAgc2luZ2xlX3Bvc3RfdGl0bGUoKTsgPz48L2gxPgoJCQkJPC9oZWFkZXI+CgkJCQk8P3BocAoJCQllbmRpZjsKCgkJCS8qIFN0YXJ0IHRoZSBMb29wICovCgkJCXdoaWxlICggaGF2ZV9wb3N0cygpICkgOgoJCQkJdGhlX3Bvc3QoKTsKCgkJCQkvKgoJCQkJICogSW5jbHVkZSB0aGUgUG9zdC1UeXBlLXNwZWNpZmljIHRlbXBsYXRlCgkJCQkgKiBmb3IgdGhlIGNvbnRlbnQuCgkJCQkgKiBJZiB5b3Ugd2FudCB0byBvdmVycmlkZSB0aGlzIGluIGEgY2hpbGQgdGhlbWUsCgkJCQkgKiB0aGVuIGluY2x1ZGUgYSBmaWxlIGNhbGxlZCBjb250ZW50LV9fXy5waHAKCQkJCSAqICh3aGVyZSBfX18gaXMgdGhlIFBvc3QgVHlwZSBuYW1lKSBhbmQgdGhhdAoJCQkJICogd2lsbCBiZSB1c2VkIGluc3RlYWQuCgkJCQkgKi8KCQkJCWdldF90ZW1wbGF0ZV9wYXJ0KCAndGVtcGxhdGUtcGFydHMvY29udGVudCcsIGdldF9wb3N0X3R5cGUoKSApOwoKCQkJZW5kd2hpbGU7ID8+CgoJCTxoci8+CgkJPD9waHAgLyoqCgkJICogVGhpcyByZXBsYWNlcyB0aGVfcG9zdHNfbmF2aWdhdGlvbigpIHRoYXQgb25seQoJCSAqIHByb3ZpZGVzIHByZXZpb3VzL25leHQgbmF2aWdhdGlvbgoJCSovCgkJdGhlX3Bvc3RzX3BhZ2luYXRpb24oIGFycmF5KAoJCQknc2hvd19hbGwnICA9PiBmYWxzZSwKCQkJJ3ByZXZfdGV4dCcgPT4gcml2ZW5kZWxsd2ViX2dldF9zdmcoIGFycmF5KCAnaWNvbicgPT4gJ2Fycm93LWxlZnQnICkgKSAuIF9fKCAnTmV3ZXInLCAncml2ZW5kZWxsd2ViJyApLAoJCQknbmV4dF90ZXh0JyA9PiBfXyggJ09sZGVyJywgJ3JpdmVuZGVsbHdlYicgKSAuIHJpdmVuZGVsbHdlYl9nZXRfc3ZnKCBhcnJheSggJ2ljb24nID0+ICdhcnJvdy1yaWdodCcgKSApLAoJCQknYmVmb3JlX3BhZ2VfbnVtYmVyJyA9PiAnPHNwYW4gY2xhc3M9InNjcmVlbi1yZWFkZXItdGV4dCI+JyAuIF9fKCAnUGFnZSAnLCAncml2ZW5kZWxsd2ViJyApIC4gJzwvc3Bhbj4nLAoJCQkpCgkJKTsKCgkJZWxzZSA6CgoJCQlnZXRfdGVtcGxhdGVfcGFydCggJ3RlbXBsYXRlLXBhcnRzL2NvbnRlbnQnLCAnbm9uZScgKTsKCgkJZW5kaWY7CgkJPz4KCgkJPC9tYWluPjwhLS0gI21haW4gLS0+Cgk8L2Rpdj48IS0tICNwcmltYXJ5IC0tPgoKPD9waHAKZ2V0X3NpZGViYXIoKTsKZ2V0X2Zvb3RlcigpOwoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fX0=";